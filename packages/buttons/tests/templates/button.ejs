<%#
# paramètres button

* label (string, required) : label du bouton

* tag (string) : si non défini, button

* secondary (boolean, optionnal) : si valeur true, bouton secondaire

* type (string, optionnal) type du bouton

* disabled (boolean, optionnal) : si valeur true, bouton désactivé

* size (string, optionnal) : modificateur de taille
  valeurs :
  * sm : bouton petit
  * lg : bouton large

* icon (string, optionnal) : nom de l'icone dans le bouton

* iconPlace (string, optionnal) : emplacement de l'icone
  si non défini alors que le paramètre icon est défini, bouton avec icone seule, sans label
  valeurs :
  * left : icone à gauche du label
  * right : icone à droite du label

# paramètres groupe de boutons

* group (boolean, optional) : si valeur true, créé un groupe d'au moins 2 boutons

* groupCount (Integer, optional) : définie le nombre de bouton ajoutés dans le groupe

* inline (string, optional) : aligne les boutons horizontalement (dans la mesure du possible)
  valeurs :
  * true : toujours en ligne
  * sm : en ligne a partir du breakpoint SM
  * md : en ligne a partir du breakpoint MD
  * lg : en ligne a partir du breakpoint LG

* align (string, optional) : définie l'alignement horizontal des boutons dans le groupe
  * right : align les boutons sur la droite
  * left : align les boutons sur la gauche
  * center : align les boutons au centre

* equisized (boolean, optional) : si valeur true, fixe la largeur des boutons a celle du plus grand
%>

<%
 let btnClasses = locals.classes || [];
 let btnAttrs = locals.attributes || {};
 let groupClasses = locals.classes || [];
 let hierarchical = locals.hierarchical || false;

 const tag = locals.tag || 'button';

 btnClasses.push(prefix + '-btn');
 groupClasses.push(prefix + '-btns-group');

 if (locals.align) groupClasses.push(prefix + '-btns-group--'+locals.align);
 if (locals.equisized) groupClasses.push(prefix + '-btns-group--equisized');
 if (locals.reverse) groupClasses.push(prefix + '-btns-group--inline-reverse');


 switch(locals.inline) {
     case true:
        groupClasses.push(prefix + '-btns-group--inline');
        break;
     case 'sm':
        groupClasses.push(prefix + '-btns-group--inline-sm');
        break;

     case 'md':
        groupClasses.push(prefix + '-btns-group--inline-md');
        break;

     case 'lg':
        groupClasses.push(prefix + '-btns-group--inline-lg');
        break;
 }

 switch(locals.size) {
     case 'sm':
        if (locals.group) {
            groupClasses.push(prefix + '-btns-group--sm');
        } else {
            btnClasses.push(prefix + '-btn--sm');
        }
        break;

     case 'lg':
        if (locals.group) {
            groupClasses.push(prefix + '-btns-group--lg');
        } else {
            btnClasses.push(prefix + '-btn--lg');
        }
        break;
 }

 if (locals.icon !== undefined) btnClasses.push(prefix + '-fi-' + locals.icon);

 if (locals.iconPlace !== undefined) switch(locals.iconPlace)
 {

     case 'left':
        if (locals.group) groupClasses.push(prefix + '-btns-group--icon-left')
        else btnClasses.push(prefix + '-btn--icon-left');
        break;

     case 'right':
        if (locals.group) groupClasses.push(prefix + '-btns-group--icon-right')
        else btnClasses.push(prefix + '-btn--icon-right');
        break;
 }

 if (locals.secondary === true) btnClasses.push(prefix +'-btn--secondary');

 if (locals.disabled === true) btnAttrs['disabled'] = '';

 if (locals.type !== undefined) btnAttrs['type'] = type;

 let btnClassesHierarchical = [...btnClasses];
 %>

<% if (locals.group) { %>
    <ul <%- includeClasses(groupClasses) %>>
    <% for (let i = 0; i < (locals.groupCount !== undefined ? locals.groupCount : '2'); i++) { %>
        <li>
            <% // groupe + primaire = hiérarchisé, groupe + secondaire = non hiérarchisé %>
            <% if (locals.secondary === undefined && i>0) {
                btnClassesHierarchical.push(prefix +'-btn--secondary');
            } %>
            <<%= tag %> <%- includeClasses(btnClassesHierarchical); %> title="<%= label %>" <%- includeAttrs(btnAttrs); %> >
                <%= locals.equisized ? "lorem ipsum ".repeat(i+1) : label %>
            </<%= tag %>>
        </li>
    <% } %>
    </ul>
<% } else { %>
    <<%= tag %> <%- includeClasses(btnClasses) %> title="<%= label %>" <%- includeAttrs(btnAttrs); %> >
        <%= label %>
    </<%= tag %>>
<% } %>
