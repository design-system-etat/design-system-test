{"version":3,"file":"tabs.module.min.js","sources":["../../packages/core/generated/scripts/config.js","../../packages/core/api.js","../../packages/tabs/src/scripts/tabs/tab-button.js","../../packages/tabs/src/scripts/tabs/constants.js","../../packages/tabs/src/scripts/tabs/tabs-group.js","../../packages/tabs/src/scripts/tabs/tab.js","../../packages/tabs/index.js","../../packages/tabs/src/scripts/module.js","../../packages/tabs/src/scripts/tabs/build.js"],"sourcesContent":["export const prefix = 'rf';\r\nexport const namespace = 'dsfr';\r\nexport const organisation = '@gouvfr';\r\n","import { namespace } from './generated/scripts/config.js';\n\nconst api = window[namespace] || {};\nwindow[namespace] = api;\nexport default api;\n","import api from '../../../api';\n\n/**\n  * TabButton correspond au bouton cliquable qui change le panel\n  * TabButton étend de DisclosureButton qui ajoute/enelve l'attribut aria-selected,\n  * Et change l'attributte tabindex a 0 si le boutton est actif (value=true), -1 s'il n'est pas actif (value=false)\n */\nclass TabButton extends api.DisclosureButton {\n  apply (value) {\n    super.apply(value);\n    if (this.hasAttribute) {\n      this.element.setAttribute('tabindex', value ? '0' : '-1');\n    }\n  }\n}\n\nexport { TabButton };\n","import api from '../../../api.js';\n\nconst TABS_SELECTOR = api.ns.selector('tabs');\nconst TABS_CLASS = api.ns('tabs');\nconst TAB_CLASS = api.ns('tabs__tab');\nconst PANEL_CLASS = api.ns('tabs__panel');\nconst LIST_CLASS = api.ns('tabs__list');\n\nconst TRANSITION_TIME = 100;\n\nexport { TABS_SELECTOR, TABS_CLASS, TAB_CLASS, PANEL_CLASS, LIST_CLASS, TRANSITION_TIME };\n","import api from '../../../api.js';\nimport { LIST_CLASS, TAB_CLASS, TABS_CLASS } from './constants';\n\n/**\n* TabGroup est la classe étendue de DiscosuresGroup\n* Correspond à un objet Tabs avec plusieurs tab-button & Tab (panel)\n*/\nclass TabsGroup extends api.DisclosuresGroup {\n  constructor (id, element) {\n    super(id, element);\n    this.list = element.querySelector(`.${LIST_CLASS}`);\n\n    element.addEventListener('transitionend', this.transitionend.bind(this));\n\n    this.listen();\n    api.engine.renderer.add(this.render.bind(this));\n  }\n\n  static get selector () { return TABS_CLASS; }\n\n  transitionend (e) {\n    this.element.style.transition = 'none';\n  }\n\n  listen () {\n    this.keyListener = new api.KeyListener(this.element);\n    this.keyListener.down(api.KeyListener.RIGHT, this.arrowRightPress.bind(this), true, true);\n    this.keyListener.down(api.KeyListener.LEFT, this.arrowLeftPress.bind(this), true, true);\n    this.keyListener.down(api.KeyListener.HOME, this.homePress.bind(this), true, true);\n    this.keyListener.down(api.KeyListener.END, this.endPress.bind(this), true, true);\n  }\n\n  /**\n   * Selectionne l'element suivant de la liste si on est sur un bouton\n   * Si on est à la fin on retourne au début\n   */\n  arrowRightPress () {\n    if (document.activeElement.classList.contains(TAB_CLASS)) {\n      if (this.index < this.length - 1) {\n        this.index++;\n      } else {\n        this.index = 0;\n      }\n\n      this.focus();\n    }\n  };\n\n  /**\n   * Selectionne l'element précédent de la liste si on est sur un bouton\n   * Si on est au debut retourne a la fin\n   */\n  arrowLeftPress () {\n    if (document.activeElement.classList.contains(TAB_CLASS)) {\n      if (this.index > 0) {\n        this.index--;\n      } else {\n        this.index = this.length - 1;\n      }\n\n      this.focus();\n    }\n  };\n\n  /**\n   * Selectionne le permier element de la liste si on est sur un bouton\n   */\n  homePress () {\n    if (document.activeElement.classList.contains(TAB_CLASS)) {\n      this.index = 0;\n      this.focus();\n    }\n  };\n\n  /**\n   * Selectionne le dernier element de la liste si on est sur un bouton\n   */\n  endPress () {\n    if (document.activeElement.classList.contains(TAB_CLASS)) {\n      this.index = this.length - 1;\n      this.focus();\n    }\n  };\n\n  focus () {\n    if (this.current) this.current.focus();\n  }\n\n  apply (value, initial) {\n    for (let i = 0; i < this._index; i++) this.members[i].translate(-1, initial);\n    this.current.element.style.transform = '';\n    for (let i = this._index + 1; i < this.length; i++) this.members[i].translate(1, initial);\n    this.element.style.transition = '';\n  }\n\n  add (tab) {\n    super.add(tab);\n    if (this.length === 1 || tab.disclosed) this.current = tab;\n    else {\n      const index = this.members.indexOf(tab);\n      if (this._index > -1 && this._index !== index) tab.element.style.transform = `translateX(${index < this._index ? -100 : 100}%)`;\n    }\n  }\n\n  render () {\n    if (this.current === null) return;\n    const paneHeight = Math.round(this.current.element.offsetHeight);\n    if (this.panelHeight === paneHeight) return;\n    this.panelHeight = paneHeight;\n    this.element.style.height = (this.panelHeight + this.list.offsetHeight) + 'px';\n  }\n}\n\nexport { TabsGroup };\n","import api from '../../../api.js';\nimport { TabButton } from './tab-button.js';\nimport { PANEL_CLASS } from './constants.js';\nimport { TabsGroup } from './tabs-group.js';\n\n/**\n  * Tab coorespond au panel d'un élement Tabs (tab panel)\n  * Tab étend disclosure qui ajoute/enleve le modifier --selected,\n  * et ajoute/eleve l'attribut hidden, sur le panel\n  */\nclass Tab extends api.Disclosure {\n  static get type () { return api.DISCLOSURE_TYPES.select; }\n  static get selector () { return PANEL_CLASS; }\n\n  get GroupConstructor () { return TabsGroup; }\n\n  buttonFactory (element) {\n    return new TabButton(element, this);\n  }\n\n  translate (direction, initial) {\n    if (initial) this.element.style.transition = 'none';\n    this.element.style.transform = `translate(${direction * 100}%)`;\n    if (initial) this.element.style.transition = '';\n  }\n\n  reset () {\n    this.group.index = 0;\n  }\n}\n\nexport { Tab };\n","import api from './api.js';\nimport { Tab } from './src/scripts/tabs/tab.js';\nimport { TabButton } from './src/scripts/tabs/tab-button.js';\nimport { TabsGroup } from './src/scripts/tabs/tabs-group';\n\napi.Tab = Tab;\napi.TabButton = TabButton;\napi.TabsGroup = TabsGroup;\n","/* eslint-disable no-new */\nimport api from '../../api.js';\nimport { build } from './tabs/build.js';\nimport { TABS_SELECTOR } from './tabs/constants.js';\n\nnew api.Initializer(TABS_SELECTOR, [build]);\n","import { Tab } from './tab';\n\n/**\n* Initialise tout les éléments Tab dans la page\n*/\nconst build = () => {\n  Tab.build(document);\n};\n\nexport { build };\n"],"names":["api","window","TabButton","DisclosureButton","[object Object]","value","super","apply","this","hasAttribute","element","setAttribute","TABS_SELECTOR","ns","selector","TABS_CLASS","TAB_CLASS","PANEL_CLASS","LIST_CLASS","TabsGroup","DisclosuresGroup","id","list","querySelector","addEventListener","transitionend","bind","listen","engine","renderer","add","render","e","style","transition","keyListener","KeyListener","down","RIGHT","arrowRightPress","LEFT","arrowLeftPress","HOME","homePress","END","endPress","document","activeElement","classList","contains","index","length","focus","current","initial","i","_index","members","translate","transform","tab","disclosed","indexOf","paneHeight","Math","round","offsetHeight","panelHeight","height","Tab","Disclosure","type","DISCLOSURE_TYPES","select","GroupConstructor","direction","group","Initializer","build"],"mappings":"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"}